from MalwareModel import Classifier
import os
import numpy as np
from datetime import datetime
startTime = datetime.now()

data_dimension = 32
#create modelsfolder
modelsFolder = 'models'
try:
    # Create target Directory
    os.mkdir(modelsFolder)
    print("Directory %s created",modelsFolder)
except FileExistsError:
    print("Directory %s already exists!" , modelsFolder)

X = np.load( 'images_for_learning/x.npy'.format( data_dimension )) # input images for training
Y = np.load( 'images_for_learning/y.npy'.format( data_dimension )) # labels
test_X = np.load( 'images_for_learning/test_x.npy'.format( data_dimension ))  # input images for training
test_Y = np.load( 'images_for_learning/test_y.npy'.format( data_dimension ))  # labels

#print( X.shape )
#print( Y.shape )
#print( test_X.shape )
#print( test_Y.shape )

X = X.reshape( ( X.shape[0] , data_dimension**2  ) ).astype( np.float32 )
test_X = test_X.reshape( ( test_X.shape[0] , data_dimension**2 ) ).astype( np.float32 )

classifier = Classifier( number_of_classes=25 )

parameters = {
    'batch_size' : 32 ,
    'epochs' : 150 ,
    'callbacks' : None ,
    'val_data' : None
}

classifier.fit( X , Y  , hyperparameters=parameters )

classifier.save_model( 'models/model.h5')

loss , accuracy = classifier.evaluate( test_X , test_Y )
print( "Loss of {}".format( loss ) , "Accuracy of {} %".format( accuracy * 100 ) )
print("[+] Total training time", datetime.now() - startTime)
